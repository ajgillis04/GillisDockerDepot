# Nextcloud - An open-source cloud storage solution.
# Nextcloud is a finicky beast if you get into trouble if you get in trouble with it start over
# docker stop $(docker ps -a -q --filter name=nextcloud)
# docker rm $(docker ps -a -q --filter name=nextcloud)
# docker volume rm $(docker volume ls -q --filter name=nextcloud)
# docker network rm $(docker network ls -q --filter name=nextcloud)
# sudo rm -rf /share/CACHEDEV1_DATA/Container/container-station-data/lib/docker/volumes/nextcloud/_data
# sudo rm -rf /share/CACHEDEV1_DATA/Container/container-station-data/lib/docker/volumes/nextcloud

# After setup you can run these scripts
# sudo docker run -it --rm --volume /share/Docker/GillisDockerDepot/appdata/nextcloud/var/www/html:/var/www/html:rw alpine sh -c "apk add --no-cache nano && nano /var/www/html/config/config.php"
# docker cp /share/Docker/GillisDockerDepot/scripts/create_users_nextcloud.sh nextcloud.GillisNAS:/tmp/create_users_nextcloud.sh
# docker exec -it -u www-data nextcloud.GillisNAS sh /tmp/create_users_nextcloud.sh
# Create shares manually script not working
# chmod +x scripts/create_photosdir_nextcloud.sh
# dos2unix scripts/create_photosdir_nextcloud.sh
# create_photosdir_nextcloud.sh
# *************************** VOLUMES ******************************************
# This volume is required to make nextcloud_aio_mastercontainer work
# Nextcloud - A private cloud storage solution

# Perms if you are mounting hosts home directories to nextcloud. Note this removes admins rights to read user files.
# sudo chown -R <username>:33 /share/homes/<username>
# sudo chmod -R 770 /share/homes/<username>
# restore rights to admin
# sudo chown -R <username>:administrators /share/homes/<username>
services:
  nextcloud:
    container_name: nextcloud.${HOST_NAME}
    hostname: nextcloud.${HOST_NAME}.local
    image: nextcloud:latest
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      DOMAINNAME: ${DOMAINNAME}
      MYSQL_HOST: mariadb.${HOST_NAME}
      MYSQL_DATABASE: nextcloud      
      MYSQL_USER_FILE: /run/secrets/nextcloud_mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/nextcloud_mysql_password
    networks:
      - mediaserver
    ports:
      - "${NEXTCLOUD_PORT}:80"
    volumes:
      - ${DOCKERDIR}/nextcloud/var/www/html:/var/www/html      
      - ${DOCKERDIR}/logs/nextcloud:/var/log
      - ${NEXTCLOUD_EXSTORAGE}:/share
      - ${NEXTCLOUD_HOMES}:/homes
    restart: always
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.nextcloud-rtr.entrypoints=https"
      - "traefik.http.routers.nextcloud-rtr.rule=Host(`nextcloud.${DOMAINNAME}`)"      
      - "traefik.http.routers.nextcloud-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.nextcloud-rtr.tls.options=tls-opts@file"
      ## Docker Network
      - "traefik.docker.network=mediaserver"
      ## HTTP Services
      - "traefik.http.routers.nextcloud-rtr.service=nextcloud-svc"      
      - "traefik.http.services.nextcloud-svc.loadbalancer.server.port=80"
      ## Watchtower Enable
      - "com.centurylinklabs.watchtower.enable=false" # Disable watchtower for this container, should upgrade manually
      ## Homepage Labels
      - "homepage.group=Infrastructure"
      - "homepage.name=Nextcloud"
      - "homepage.icon=nextcloud.png"
      - "homepage.href=http://nextcloud.${DOMAINNAME}/"
      - "homepage.description=Your private cloud"