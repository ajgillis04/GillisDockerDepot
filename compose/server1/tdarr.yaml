# Tdarr - GPU-accelerated video transcoding and management tool.

# Notes:
# Hardware Transcoding Tests
# Nvidia
# docker run -e "NVIDIA_DRIVER_CAPABILITIES=all" -e "NVIDIA_VISIBLE_DEVICES=all" --gpus=all ghcr.io/haveagitgat/tdarr_node:latest /bin/bash -e -c 'curl -o /tmp/sample.mkv -l https://samples.tdarr.io/api/v1/samples/sample__1080__libx264__aac__30s__video.mkv; ffmpeg -i /tmp/sample.mkv -c:v:0 hevc_nvenc /tmp/sample-out.mkv'
# VAAPI
# docker run --device=/dev/dri:/dev/dri ghcr.io/haveagitgat/tdarr_node:latest /bin/bash -e -c 'curl -o /tmp/sample.mkv -l https://samples.tdarr.io/api/v1/samples/sample__1080__libx264__aac__30s__video.mkv; ffmpeg -hwaccel vaapi -hwaccel_device /dev/dri/renderD128 -hwaccel_output_format vaapi -i /tmp/sample.mkv -c:v:0 hevc_vaapi /tmp/sample-out.mkv'
# QSV
# docker run --device=/dev/dri:/dev/dri ghcr.io/haveagitgat/tdarr_node:latest /bin/bash -e -c 'ffmpeg -hwaccel qsv -f lavfi -i color=c=black:s=256x256:d=1:r=30 -c:v:0 hevc_qsv -f null /dev/null'

services:
  tdarr:
    container_name: tdarr.${HOST_NAME}
    hostname: tdarr.${HOST_NAME}.local
    image: haveagitgat/tdarr:latest
    environment:
      TZ: ${TZ}
      PGID: ${PGID}
      PUID: ${PUID}
      DOMAINNAME: ${DOMAINNAME}
      UMASK_SET: 002
      serverIP: ${TDARR_SERVERIP}
      serverPort: ${TDARR_SERVER_PORT}
      webUIPort: ${TDARR_WEBUI_PORT}
      internalNode: false # true to enable the Node in the Server container.
      inContainer: true # Tell tdarr its running in docker
#      nodeName: tdarr_node.${HOST_NAME}     
      # NVIDIA_DRIVER_CAPABILITIES: all # Nvidia transcoding
      # NVIDIA_VISIBLE_DEVICES: all # Nvidia transcoding
    networks:
      - mediaserver
    ports:
      - "${TDARR_WEBUI_PORT}:8265"
      - "${TDARR_SERVER_PORT}:8266"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERDIR}/tdarr/app/server:/app/server
      - /dev/shm/tdarr:/temp # offload transcoding to memory
      - ${MEDIASHARE}:/media
      - ${DOCKERDIR}/logs/tdarr:/app/logs
    # Hardware transcoding
    # devices:
    #  - /dev/dri:/dev/dri
    # deploy:
    #  resources:
    #    reservations:
    #      devices:
    #      - driver: nvidia # Pick one
    #      - driver: vaapi # Pick one
    #      - driver: qsv # Pick one
    #        count: all
    #        capabilities: [gpu] 
    restart: always
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.tdarr-rtr.entrypoints=https"
      - "traefik.http.routers.tdarr-rtr.rule=Host(`tdarr.${DOMAINNAME}`)"
      - "traefik.http.routers.tdarr-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.tdarr-rtr.middlewares=chain-oauth@file"
      ## Docker Network
      - "traefik.docker.network=mediaserver"
      ## HTTP Services
      - "traefik.http.routers.tdarr-rtr.service=tdarr-svc"
      - "traefik.http.services.tdarr-svc.loadbalancer.server.port=8265"
      ## Watchtower Enable
      - "com.centurylinklabs.watchtower.enable=false" #Client and Server versions must match so should be carefully updating
      ## Homepage Labels
      - "homepage.group=Other"
      - "homepage.name=Tdarr"
      - "homepage.icon=tdarr.png"
      - "homepage.href=http://tdarr.${DOMAINNAME}/"
      - "homepage.description=Automate transcoding of media"
